default:
  just --list

update:
  chezmoi update
  nix-channel --update

config: git-config

git-config:
  git config --global user.name "Beforerr"
  git config --global user.email "zzj956959688@gmail.com"
  git config --global github.user "Beforerr"

install-spack:
  #!/bin/bash
  echo "Installing 'spack' package manager..."
  if ! command -v spack; then
    git clone -c feature.manyFiles=true https://github.com/spack/spack.git
    . spack/share/spack/setup-env.sh
  fi

backup:
  #!/usr/bin/env sh
  killall iTerm2
  mackup backup --force && mackup uninstall --force

restore:
  #!/usr/bin/env sh
  killall iTerm2
  echo "Syncing applications with 'mackup'..."
  mackup restore --force && mackup uninstall --force

clean:
  nix-collect-garbage -d
  brew cleanup

version:
	nix --version && brew --version && micromamba --version

cmd:
  # zoxide
  curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash

rustup:
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

r-up:
  #!/usr/bin/env sh
  echo "Installing R..."
  if ! command -v R; then
    brew install --cask r
  fi

julia-all: julia-up julia-pkgs

# Install Julia
julia-up:
  #!/usr/bin/env sh
  echo "Installing Juliaup - Julia version manager..."
  if ! command -v juliaup; then
    curl -fsSL https://install.julialang.org | sh -s -- --yes
  fi

julia-pkgs:
  #!/usr/bin/env sh
  if command -v julia; then
    julia packages.jl
  else
    echo "Julia not installed. Skipping packages installation."
  fi

julia-pluto:
  #!/usr/bin/env julia
  import Pluto;
  Pluto.run()

zotero-link:
  ln -s ~/Library/CloudStorage/Box-Box/storage ~/Zotero/storage

zotero-addons:
  aria2c https://github.com/syt2/zotero-addons/releases/latest/download/zotero-addons.xpi

popclip:
	curl https://pilotmoon.com/popclip/extensions/ext/DOI.popclipextz -o "DOI.popclipextz"
	open "DOI.popclipextz"

gpt-academic:
  #!/usr/bin/env sh
  cd ~/src/gpt_academic
  micromamba run -n gptac_venv python -m pip install -r requirements.txt # 这个步骤和pip安装一样的步骤
  micromamba run -n gptac_venv python main.py